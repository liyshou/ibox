/* soapStub.h
   Generated by gSOAP 2.8.14 from bestpay.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include <vector>
#include "stdsoap2.h"
#if GSOAP_VERSION != 20814
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns1__dispatchCommandResponse
#define SOAP_TYPE_ns1__dispatchCommandResponse (11)
/* ns1:dispatchCommandResponse */
struct ns1__dispatchCommandResponse
{
public:
	std::string _dispatchCommandReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
public:
	int soap_type() const { return 11; } /* = unique id SOAP_TYPE_ns1__dispatchCommandResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__dispatchCommand
#define SOAP_TYPE_ns1__dispatchCommand (12)
/* ns1:dispatchCommand */
struct ns1__dispatchCommand
{
public:
	std::string _in0;	/* required element of type xsd:string */
	std::string _in1;	/* required element of type xsd:string */
public:
	int soap_type() const { return 12; } /* = unique id SOAP_TYPE_ns1__dispatchCommand */
};
#endif

#ifndef SOAP_TYPE_ns1__dispatchCommandIPOSResponse
#define SOAP_TYPE_ns1__dispatchCommandIPOSResponse (14)
/* ns1:dispatchCommandIPOSResponse */
struct ns1__dispatchCommandIPOSResponse
{
public:
	std::string _dispatchCommandIPOSReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
public:
	int soap_type() const { return 14; } /* = unique id SOAP_TYPE_ns1__dispatchCommandIPOSResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__dispatchCommandIPOS
#define SOAP_TYPE_ns1__dispatchCommandIPOS (15)
/* ns1:dispatchCommandIPOS */
struct ns1__dispatchCommandIPOS
{
public:
	std::string _in0;	/* required element of type xsd:string */
	std::string _in1;	/* required element of type xsd:string */
public:
	int soap_type() const { return 15; } /* = unique id SOAP_TYPE_ns1__dispatchCommandIPOS */
};
#endif

#ifndef SOAP_TYPE_ns1__dispatchCommandEXTResponse
#define SOAP_TYPE_ns1__dispatchCommandEXTResponse (17)
/* ns1:dispatchCommandEXTResponse */
struct ns1__dispatchCommandEXTResponse
{
public:
	std::string _dispatchCommandEXTReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
public:
	int soap_type() const { return 17; } /* = unique id SOAP_TYPE_ns1__dispatchCommandEXTResponse */
};
#endif

#ifndef SOAP_TYPE_ns1__dispatchCommandEXT
#define SOAP_TYPE_ns1__dispatchCommandEXT (18)
/* ns1:dispatchCommandEXT */
struct ns1__dispatchCommandEXT
{
public:
	std::string _in0;	/* required element of type xsd:string */
	std::string _in1;	/* required element of type xsd:string */
public:
	int soap_type() const { return 18; } /* = unique id SOAP_TYPE_ns1__dispatchCommandEXT */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (19)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 19; } /* = unique id SOAP_TYPE_SOAP_ENV__Header */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (20)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 20; } /* = unique id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (22)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 22; } /* = unique id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (25)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 25; } /* = unique id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (26)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 26; } /* = unique id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__dispatchCommand(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string _in0, std::string _in1, std::string &_dispatchCommandReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__dispatchCommandIPOS(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string _in0, std::string _in1, std::string &_dispatchCommandIPOSReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__dispatchCommandEXT(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string _in0, std::string _in1, std::string &_dispatchCommandEXTReturn);

#endif

/* End of soapStub.h */
